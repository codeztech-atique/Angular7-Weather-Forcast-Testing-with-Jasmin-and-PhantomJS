{
  "name": "localcast-weather",
  "version": "7.2.11",
  "license": "MIT",
  "config": {
    "imageRepo": "duluca/localcast-weather",
    "imageName": "localcast-weather",
    "imagePort": "8080"
  },
  "scripts": {
    "ng": "ng",
    "standardize": "import-sort --write \"**/*.ts\" && prettier --write \"**/*.ts\" && js-beautify \"src/**/*.html\"",
    "start": "npm run standardize && ng serve --port 5000",
    "build": "npm run standardize && ng build",
    "test": "ng test",
    "test:debug": "ng test --sourcemaps",
    "coverage": "ng test --code-coverage",
    "lint": "ng lint",
    "e2e": "ng e2e",
    "build:prod": "ng build --prod --output-path dist",
    "predocker:build": "npm run build:prod && npm test -- --watch=false && npm run e2e",
    "docker:build": "cross-conf-env docker image build . -t $npm_package_config_imageRepo:$npm_package_version",
    "postdocker:build": "npm run docker:tag",
    "docker:tag": " cross-conf-env docker image tag $npm_package_config_imageRepo:$npm_package_version $npm_package_config_imageRepo:latest",
    "docker:run": "run-s -c docker:clean docker:runHelper",
    "docker:runHelper": "cross-conf-env docker run -e NODE_ENV=local --name $npm_package_config_imageName -d -p $npm_package_config_imagePort:3000 $npm_package_config_imageRepo",
    "predocker:publish": "echo Attention! Ensure `docker login` is correct.",
    "docker:publish": "cross-conf-env docker image push $npm_package_config_imageRepo:$npm_package_version",
    "postdocker:publish": "cross-conf-env docker image push $npm_package_config_imageRepo:latest",
    "docker:clean": "cross-conf-env docker rm -f $npm_package_config_imageName",
    "predocker:taillogs": "echo Web Server Logs:",
    "docker:taillogs": "cross-conf-env docker logs -f $npm_package_config_imageName",
    "docker:open:win": "echo Trying to launch on Windows && timeout 2 && start http://localhost:%npm_package_config_imagePort%",
    "docker:open:mac": "echo Trying to launch on MacOS && sleep 2 && URL=http://localhost:$npm_package_config_imagePort && open $URL",
    "docker:debugmessage": "echo Docker Debug Completed Successfully! Hit Ctrl+C to terminate log tailing.",
    "predocker:debug": "run-s -c docker:build docker:run",
    "docker:debug": "run-s -cs docker:open:win docker:open:mac docker:debugmessage docker:taillogs"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "7.2.11",
    "@angular/cdk": "7.3.6",
    "@angular/common": "7.2.11",
    "@angular/compiler": "7.2.11",
    "@angular/core": "7.2.11",
    "@angular/flex-layout": "^7.0.0-beta.22",
    "@angular/forms": "7.2.11",
    "@angular/http": "7.2.11",
    "@angular/material": "7.3.6",
    "@angular/platform-browser": "7.2.11",
    "@angular/platform-browser-dynamic": "7.2.11",
    "@angular/platform-server": "7.2.11",
    "@angular/router": "7.2.11",
    "core-js": "^2.6.1",
    "hammerjs": "^2.0.8",
    "intl": "^1.2.5",
    "karma-phantomjs-launcher": "^1.0.4",
    "rxjs": "6.4.0",
    "zone.js": "^0.8.26"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "~0.11.4",
    "@angular-devkit/core": "^7.1.4",
    "@angular/cli": "7.3.7",
    "@angular/compiler-cli": "^7.2.11",
    "@angular/language-service": "^7.2.11",
    "@types/jasmine": "^3.3.4",
    "@types/jasminewd2": "~2.0.6",
    "@types/node": "^10.12.18",
    "codelyzer": "^4.5.0",
    "cross-conf-env": "^1.1.2",
    "dev-norms": "1.6.0",
    "import-sort": "^6.0.0",
    "import-sort-cli": "^6.0.0",
    "import-sort-parser-typescript": "^6.0.0",
    "import-sort-style-module": "^6.0.0",
    "jasmine": "^3.3.1",
    "jasmine-core": "~3.3.0",
    "jasmine-spec-reporter": "~4.2.1",
    "js-beautify": "^1.9.1",
    "karma": "~6.3.14",
    "karma-chrome-launcher": "~2.2.0",
    "karma-cli": "~2.0.0",
    "karma-coverage-istanbul-reporter": "^2.0.4",
    "karma-jasmine": "^2.0.1",
    "karma-jasmine-html-reporter": "^1.4.0",
    "npm-run-all": "^4.1.5",
    "prettier": "^1.16.4",
    "protractor": "~5.4.1",
    "ts-node": "^7.0.1",
    "tslint": "^5.12.0",
    "typescript": "^3.2.2"
  },
  "importSort": {
    ".ts, .tsx": {
      "parser": "typescript",
      "style": "module",
      "options": {}
    }
  },
  "prettier": {
    "printWidth": 90,
    "semi": false,
    "singleQuote": true,
    "trailingComma": "es5",
    "parser": "typescript"
  }
}
